name: Generate OpenAI routing rules for Surge

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "custom_openai_1=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/OpenAI/OpenAI.list" >> $GITHUB_ENV
          # echo "custom_openai_2=https://raw.githubusercontent.com/hly0928/Proxy-profiles/master/Surge/Ruleset/OpenAI.list" >> $GITHUB_ENV

        shell: bash

      - name: Checkout the default branch
        uses: actions/checkout@v3

      - name: Make directory
        run: |
          mkdir -p Ruleset

      - name: Generate openai.txt file
        run: |
          # 检查 custom_openai_1 是否可访问
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" ${{ env.custom_openai_1 }})
          if [ "$HTTP_CODE" != "404" ]; then
              curl -L -o Ruleset/OpenAI.txt ${{ env.custom_openai_1 }}
              # 删除所有以#开头的注释行
              sed -i '/^[[:space:]]*#/d' Ruleset/OpenAI.txt
          else
              echo "custom_openai_1 返回404，跳过下载"
              touch Ruleset/OpenAI.txt
          fi
          sort -u Ruleset/OpenAI.txt -o Ruleset/OpenAI.txt

      - name: Sort OpenAI rules by type
        run: |
          # 创建临时文件存储不同类型的规则
          grep "^DOMAIN," Ruleset/OpenAI.txt > temp_domain.txt || true
          grep "^DOMAIN-SUFFIX," Ruleset/OpenAI.txt > temp_domain_suffix.txt || true
          grep "^DOMAIN-KEYWORD," Ruleset/OpenAI.txt > temp_domain_keyword.txt || true
          grep "^IP-CIDR," Ruleset/OpenAI.txt > temp_ip_cidr.txt || true
          grep "^IP-ASN," Ruleset/OpenAI.txt > temp_ip_asn.txt || true
          
          # 获取不属于上述类型的规则
          grep -v "^DOMAIN,\|^DOMAIN-SUFFIX,\|^DOMAIN-KEYWORD,\|^IP-CIDR,\|^IP-ASN," Ruleset/OpenAI.txt > temp_others.txt || true
          
          # 统计各类型规则数量
          DOMAIN_COUNT=$(wc -l < temp_domain.txt || echo 0)
          DOMAIN_SUFFIX_COUNT=$(wc -l < temp_domain_suffix.txt || echo 0)
          DOMAIN_KEYWORD_COUNT=$(wc -l < temp_domain_keyword.txt || echo 0)
          IP_CIDR_COUNT=$(wc -l < temp_ip_cidr.txt || echo 0)
          IP_ASN_COUNT=$(wc -l < temp_ip_asn.txt || echo 0)
          OTHERS_COUNT=$(wc -l < temp_others.txt || echo 0)
          TOTAL_COUNT=$((DOMAIN_COUNT + DOMAIN_SUFFIX_COUNT + DOMAIN_KEYWORD_COUNT + IP_CIDR_COUNT + IP_ASN_COUNT + OTHERS_COUNT))
          
          # 生成头部信息
          {
            echo "# OpenAI 路由规则"
            echo "# REPO: https://github.com/zhiyue/surge-rules"
            echo "# UPDATED: $(date '+%Y-%m-%d %H:%M:%S')"
            echo "# DOMAIN: $DOMAIN_COUNT"
            echo "# DOMAIN-KEYWORD: $DOMAIN_KEYWORD_COUNT"
            echo "# DOMAIN-SUFFIX: $DOMAIN_SUFFIX_COUNT"
            echo "# IP-ASN: $IP_ASN_COUNT"
            echo "# IP-CIDR: $IP_CIDR_COUNT"
            echo "# TOTAL: $TOTAL_COUNT"
          } > Ruleset/OpenAI.list

          # 按顺序合并所有临时文件
          cat temp_domain.txt temp_domain_suffix.txt temp_domain_keyword.txt temp_ip_cidr.txt temp_ip_asn.txt temp_others.txt >> Ruleset/OpenAI.list
          
          # 删除临时文件
          rm temp_*.txt

      - name: Move files to publish directory
        run: |
          mkdir -p publish/Ruleset
          cp Ruleset/OpenAI.list ./publish/Ruleset/

      - name: Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/Ruleset/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
          for file in $(ls ruleset); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/ruleset/${file}"
          done
