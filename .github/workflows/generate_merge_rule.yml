name: Generate routing rules for Surge
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "custom_openai_1=https://raw.githubusercontent.com/ExaAlice/Alice/main/Rule/OpenAi.list" >> $GITHUB_ENV
          echo "custom_openai_2=https://raw.githubusercontent.com/hly0928/Proxy-profiles/master/Surge/Ruleset/OpenAI.list" >> $GITHUB_ENV

        shell: bash

      - name: Checkout the default branch
        uses: actions/checkout@v3

      - name: Make directory
        run: |
          mkdir -p ruleset

      # 从上面的两个 custom_openai_1、custom_openai_2 和 custom_openai_3 获取规则, 并且合并到 ruleset/OpenAI.list 中, 要排序并且去重
      - name: Generate openai.txt file
        run: |
            curl -L -o ruleset/OpenAI_final.list ${ custom_openai_1 }
            curl -L >> ruleset/OpenAI_final.list ${ custom_openai_2 }
            cat ruleset/OpenAI.list >> ruleset/OpenAI_final.list
            sort -u ruleset/OpenAI_final.list -o ruleset/OpenAI_final.list

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          cp *.txt ./publish/
          mv ruleset ./publish/

      - name: Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
          for file in $(ls ruleset); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/ruleset/${file}"
          done
